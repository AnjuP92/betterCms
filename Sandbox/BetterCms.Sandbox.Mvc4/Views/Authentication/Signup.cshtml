@* --------------------------------------------------------------------------------------------------------------------
    // <copyright file="Login.cshtml" company="Devbridge Group LLC">
    //
    // Copyright (C) 2015,2016 Devbridge Group LLC
    //
    // This program is free software: you can redistribute it and/or modify
    // it under the terms of the GNU Lesser General Public License as published by
    // the Free Software Foundation, either version 3 of the License, or
    // (at your option) any later version.
    //
    // This program is distributed in the hope that it will be useful,
    // but WITHOUT ANY WARRANTY; without even the implied warranty of
    // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    // GNU General Public License for more details.
    //
    // You should have received a copy of the GNU Lesser General Public License
    // along with this program.  If not, see http://www.gnu.org/licenses/.
    // </copyright>
    //
    // <summary>
    // Better CMS is a publishing focused and developer friendly .NET open source CMS.
    //
    // Website: https://www.bettercms.com
    // GitHub: https://github.com/devbridge/bettercms
    // Email: info@bettercms.com
    // </summary>
    // -------------------------------------------------------------------------------------------------------------------- *@

@using BetterCms.Module.Users.Controllers;
@using BetterCms.Module.Users.Services;
@using BetterCms.Module.Users.ViewModels;


@using BetterCms.Module.Root.Content.Resources
@using BetterCms.Module.Root.Mvc.Helpers
@using BetterCms.Module.Users.Content.Resources
@using BetterCms.Module.Users.Controllers
@using BetterCms.Module.Users.ViewModels.User
@using Microsoft.Web.Mvc

@model EditUserViewModel

@{
    Layout = "~/Areas/bcms-users/Views/Shared/PublicActionLayout.cshtml";
    ViewBag.Title = "Signup";
}
<script src="~/Scripts/jquery-3.1.1.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>


<div class="">
    <h1>@ViewBag.result</h1>
    @if (!string.IsNullOrEmpty( ViewBag.result))
    { 
    <script>
        setTimeout(function () {
            window.location.href = '/login';
        }, 3000);
    </script>
    }
    <div id="divBasicLogin">
        @using (Html.BeginForm())
        {
            @Html.HiddenFor(m => m.Id)
            @Html.HiddenFor(m => m.Version)

            <div class="bcms-form-block-holder">
                <div>
                    <div class="bcms-input-list-holder">
                        <div class="bcms-content-titles">@UsersGlobalization.EditUser_FirstName_Title <span>*</span></div>
                        <div class="bcms-field-wrapper">
                            @Html.TextBoxFor(m => m.FirstName, new { @class = "bcms-field-text" })
                            @Html.BcmsValidationMessageFor(m => m.FirstName)
                        </div>
                    </div>

                    <div class="bcms-input-list-holder">
                        <div class="bcms-content-titles">@UsersGlobalization.EditUser_LastName <span>*</span></div>
                        <div class="bcms-field-wrapper">
                            @Html.TextBoxFor(m => m.LastName, new { @class = "bcms-field-text"})
                            @Html.BcmsValidationMessageFor(m => m.LastName)
                        </div>
                    </div>

                    <div class="bcms-input-list-holder">
                        <div class="bcms-content-titles">@UsersGlobalization.EditUser_UserName_Title <span>*</span></div>
                        
                        <div class="bcms-field-wrapper">
                            @Html.TextBoxFor(m => m.UserName, new { @class = "bcms-field-text" })
                            @Html.BcmsValidationMessageFor(m => m.UserName)
                        </div>
                    </div>

                    <div class="bcms-input-list-holder">
                        <div class="bcms-content-titles">@UsersGlobalization.EditUser_Email_Title <span>*</span></div>
                        <div class="bcms-field-wrapper">
                            @Html.TextBoxFor(m => m.Email, new { @class = "bcms-field-text" })
                            @Html.ValidationMessageFor(m => m.Email)
                        </div>
                    </div>

                    <div class="bcms-input-list-holder">
                        <div class="bcms-content-titles">@UsersGlobalization.EditUser_Password_Title <span>*</span></div>
                        <div class="bcms-field-wrapper">
                            @Html.TextBoxFor(m => m.Password, new { @class = "bcms-field-text", @type = "password" })
                            @Html.BcmsValidationMessageFor(m => m.Password)
                        </div>
                    </div>

                    <div class="bcms-input-list-holder">
                        <div class="bcms-content-titles">@UsersGlobalization.EditUser_RetypePassword_Title <span>*</span></div>
                        <div class="bcms-field-wrapper">
                            @Html.TextBoxFor(m => m.RetypedPassword, new { @class = "bcms-field-text", @type = "password" })
                            @Html.BcmsValidationMessageFor(m => m.RetypedPassword)
                        </div>
                    </div>
                    <div class="bcms-input-list-holder">
                        
                        <div class="bcms-field-wrapper">
                            <input type="submit" value="Submit" class="bcms-btn-tertiary" />
                            <input type="button" value="Cancel" class="bcms-btn-secondary" onclick="javascript:window.location.href='/login'" />
                            
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
</div>
    
<style>
    .bcms-input-list-holder {
    margin-top:0px;
    }
    .error {
        color: #dc4250;
        /*font-size: 11px;*/
        /*margin-left: 5px;*/
    }
    .field-validation-error {
        font-size: 13px;
        margin-left: 0px;
    }
    .bcms-content-titles span {
    color:red;
    }
</style>
<script>
    
    $.validator.addMethod('validateusername', function (value, element) {
        var expr = /^[^\\\/\"\[\]\:\;\|\=\,\+\*\?\<\>\%]+$/;
        return expr.test(value);
    }, 'The field must not contain any of the following characters: " / [ ] : ; | = , + * ? < > % or backslash');

    $.validator.addMethod('validateemail', function (value, element) {
        var expr = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@@[a-zA-Z0-9-]+(?:\.[a-zA-Z0-9-]+)+$/;
        return expr.test(value);
    }, 'Email format is not valid.');

    $("form").validate({
        rules: {
            FirstName: {
                required: true,
                rangelength: [1, 200]
            },
            LastName: {
                required: true,
                rangelength: [1, 200]
            },
            UserName: {
                required: true,
                rangelength: [1, 401],
                validateusername:true
            },
            Email: {
                required: true,
                rangelength: [1, 400],
                validateemail: true
            },
            Password: {
                rangelength: [4, 255],
                required: true
            },
            RetypedPassword: {
                equalTo: "#Password"
            },
        },

        messages: {
            FirstName: {
                required: "First name is required.",
                rangelength: "First name should not be longer than 200 characters."
            },
            LastName: {
                required: "Last name is required.",
                rangelength: "Last name should not be longer than 200 characters."
            },
            UserName: {
                required: "Username is required.",
                rangelength: "User name should not be longer than 401 character."
            },
            Email: {
                required: "Email is required.",
                rangelength: "Email should not be longer than 400 characters."
            },
            Password: {
                required: "Password is required.",
                rangelength: "Password should not be shorter than 4 characters and not be longer than 255 characters and cannot start or end with empty space."
            },
            RetypedPassword: {
                equalTo: "Password and retyped password should match."
            }
        },
        submitHandler: function (form) {
            $(form).find("input[type='submit']").attr('disabled', true);
            $(form).find("input[type='button']").attr('disabled', true);
            form.submit();
        },
        invalidHandler: function (event, validator) {
        }
    });
</script>